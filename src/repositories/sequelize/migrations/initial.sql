CREATE TABLE `podcasts` (`id` UUID PRIMARY KEY, `feedURL` TEXT NOT NULL UNIQUE, `imageURL` TEXT, `summary` TEXT, `title` TEXT, `author` TEXT, `lastBuildDate` DATETIME, `lastPubDate` DATETIME, `dateCreated` DATETIME NOT NULL, `lastUpdated` DATETIME NOT NULL, UNIQUE (feedURL));
CREATE TABLE `episodes` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `mediaURL` TEXT NOT NULL UNIQUE, `imageURL` TEXT, `title` TEXT, `summary` TEXT, `duration` INTEGER, `guid` UUID UNIQUE, `link` TEXT, `mediaBytes` INTEGER, `mediaType` TEXT, `pubDate` DATETIME, `dateCreated` DATETIME NOT NULL, `lastUpdated` DATETIME NOT NULL, `podcastId` UUID REFERENCES `podcasts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, UNIQUE (mediaURL), UNIQUE (guid));
CREATE TABLE `mediaRefs` (`id` UUID PRIMARY KEY, `startTime` INTEGER NOT NULL DEFAULT 0, `endTime` INTEGER, `title` TEXT, `description` TEXT, `ownerId` TEXT, `ownerName` TEXT, `dateCreated` DATETIME, `lastUpdated` DATETIME, `episodeId` INTEGER NOT NULL REFERENCES `episodes` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE);
CREATE TABLE `playlists` (`id` UUID PRIMARY KEY, `slug` TEXT UNIQUE, `title` TEXT NOT NULL, `ownerId` TEXT NOT NULL, `ownerName` TEXT, `dateCreated` DATETIME, `lastUpdated` DATETIME, `sharePermission` TEXT, `isRecommendation` TINYINT(1) DEFAULT 0, `isMyEpisodes` TINYINT(1), `isMyClips` TINYINT(1), UNIQUE (slug));
CREATE TABLE `users` (`id` VARCHAR(255) PRIMARY KEY, `name` TEXT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
CREATE TABLE `playlistItems` (`dateCreated` DATETIME NOT NULL, `lastUpdated` DATETIME NOT NULL, `playlistId` UUID NOT NULL REFERENCES `playlists` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `mediaRefId` UUID NOT NULL REFERENCES `mediaRefs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY (`playlistId`, `mediaRefId`));
CREATE TABLE `subscribedPodcasts` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` VARCHAR(255) NOT NULL REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `podcastId` UUID NOT NULL REFERENCES `podcasts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY (`userId`, `podcastId`));
CREATE TABLE `subscribedPlaylists` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` VARCHAR(255) NOT NULL REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `playlistId` UUID NOT NULL REFERENCES `playlists` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY (`userId`, `playlistId`));
