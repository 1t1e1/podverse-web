import { GetServerSideProps } from 'next'
import Head from 'next/head'
import { useTranslation } from 'next-i18next'
import { serverSideTranslations } from 'next-i18next/serverSideTranslations'
import OmniAural, { useOmniAural } from 'omniaural'
import { Page } from '~/lib/utility/page'
import { PV } from '~/resources'
import { getServerSideAuthenticatedUserInfo } from '~/services/auth'
import { getServerSideUserQueueItems } from '~/services/userQueueItem'
import { ButtonLink, ColumnsWrapper, ComparisonTable, PageHeader, PageScrollableContent, SideContent } from '~/components'

interface ServerProps extends Page { }

const keyPrefix = 'pages_membership'

export default function Membership(props: ServerProps) {
  const { t } = useTranslation()
  const [userInfo] = useOmniAural('session.userInfo')

  return (
    <>
      <Head>
        <title>{t('Membership')}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PageHeader text={t('Membership')} />
      <PageScrollableContent>
        <ColumnsWrapper
          mainColumnChildren={
            <div className='text-page'>
              <ComparisonTable
                aboveSectionNodes={
                  <>
                    <p>{t('Get 1 year free when you sign up for Podverse premium')}</p>
                    <p>{t('10 per year after that')}</p>
                    <div className='button-column'>
                      {
                        !userInfo && (
                          <ButtonLink
                            label={t('Login')}
                            onClick={() => OmniAural.modalsLoginShow()} />
                        )
                      }
                      {
                        userInfo && (
                          <ButtonLink
                            label={t('Renew Membership')}
                            onClick={() => OmniAural.modalsCheckoutShow()} />
                        )
                      }
                    </div>
                  </>
                }
                featuresData={featuresData(t)}
                headerIcon1={t('Free')}
                headerIcon2={t('Premium')}
                headerText={t('Features')} />
            </div>
          }
          sideColumnChildren={<SideContent />}
        />
      </PageScrollableContent>
    </>
  )
}

const featuresData = (t) => [
  {
    text: t('features - subscribe to podcasts'),
    icon1: true,
    icon2: true
  },
  {
    text: t('features - download episodes'),
    icon1: true,
    icon2: true
  },
  {
    text: t('features - drag-and-drop queue'),
    icon1: true,
    icon2: true
  },
  {
    text: t('features - sleep timer'),
    icon1: true,
    icon2: true
  },
  {
    text: t('features - light / dark mode'),
    icon1: true,
    icon2: true
  },
  {
    text: t('features - create and share clips'),
    icon1: false,
    icon2: true
  },
  {
    text: t('features - sync your subscriptions on all devices'),
    icon1: false,
    icon2: true
  },
  {
    text: t('features - sync your queue on all devices'),
    icon1: false,
    icon2: true
  },
  {
    text: t('features - create playlists'),
    icon1: false,
    icon2: true
  },
  {
    text: t('features - download a backup of your data'),
    icon1: false,
    icon2: true
  },
  {
    text: t('features - support free and open source software'),
    icon1: true,
    icon2: true,
    iconType: 'smile'
  }
]

/* Server-Side Logic */

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const { req, locale } = ctx
  const { cookies } = req

  const userInfo = await getServerSideAuthenticatedUserInfo(cookies)
  const userQueueItems = await getServerSideUserQueueItems(cookies)

  const serverProps: ServerProps = {
    serverUserInfo: userInfo,
    serverUserQueueItems: userQueueItems,
    ...(await serverSideTranslations(locale, PV.i18n.fileNames.all)),
    serverCookies: cookies
  }

  return { props: serverProps }
}
