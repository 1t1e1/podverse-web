import { GetServerSideProps } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { useTranslation } from 'next-i18next'
import { serverSideTranslations } from 'next-i18next/serverSideTranslations'
import { PasswordInputs } from '~/components'
import { Page } from '~/lib/utility/page'
import { PV } from '~/resources'
import { getServerSideAuthenticatedUserInfo, resetPassword } from '~/services/auth'

interface ServerProps extends Page {}

const keyPrefix = 'pages_reset_password'

export default function ResetPassword(props: ServerProps) {
  const router = useRouter()
  const { t } = useTranslation()
  const { token } = router.query
  const pageTitle = t('Reset Password')

  const _handleClose = () => {
    router.push('/')
  }

  const _handleResetPassword = async (email, password) => {
    console.log('handle resest', password, token)
    try {
      await resetPassword(password, token)
      alert(t('Reset password successful'))
      router.push('/')
    } catch (error) {
      alert(t('errorMessages:internetConnectivityErrorMessage'))
    }
  }

  return (
    <>
      <Head>
        <title>{pageTitle}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className='form-wrapper'>
        <h2>{pageTitle}</h2>
        <PasswordInputs
          handleClose={_handleClose}
          handleSubmit={_handleResetPassword}
          hideEmail />
      </div>
    </>
  )
}

/* Server-Side Logic */

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const { req, locale } = ctx
  const { cookies } = req

  const userInfo = await getServerSideAuthenticatedUserInfo(cookies)

  const serverProps: ServerProps = {
    serverUserInfo: userInfo,
    ...(await serverSideTranslations(locale, PV.i18n.fileNames.all)),
    serverCookies: cookies
  }

  return { props: serverProps }
}
